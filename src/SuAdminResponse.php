<?php

declare(strict_types=1);
/**
 * This file is part of SuAdmin.
 *
 * @link     https://www.SuAdmin.com
 * @document https://doc.SuAdmin.com
 * @contact  yqhcode@qq.com
 * @license  https://github.com/su-suan/suadmin
 */

namespace SuAdmin;

use Hyperf\HttpMessage\Stream\SwooleStream;
use Hyperf\HttpServer\Response;
use Psr\Http\Message\ResponseInterface;
use Swow\Psr7\Message\ResponsePlusInterface;

/**
 * Class SuAdminResponse.
 */
class SuAdminResponse extends Response
{
    /** 成功 json 返回
     * @param string|null $message
     * @param array|object $data
     * @param int $code
     * @return ResponseInterface
     */
    public function success(?string $message = null, array|object $data = [], int $code = 200): ResponseInterface
    {
        $format = [
            'success' => true,
            'code' => $code,
            'message' => $message ?: su_admin_multilingual('su_admin.response_success'),
            'data' => &$data
        ];
        $format = $this->toJson($format);
        return $this->handleHeader($this->getResponse())
            ->withAddedHeader('content-type', 'application/json; charset=utf-8')
            ->withBody(new SwooleStream($format));
    }

    /** 失败 json 返回
     * @param string $message
     * @param int $code
     * @param array $data
     * @return ResponseInterface
     */
    public function error(string $message = '', int $code = 500, array $data = []): ResponseInterface
    {
        $format = [
            'success' => false,
            'code' => $code,
            'message' => $message ?: su_admin_multilingual('su_admin.response_error'),
            'data' => &$data
        ];

        $format = $this->toJson($format);
        return $this->handleHeader($this->getResponse())
            ->withAddedHeader('content-type', 'application/json; charset=utf-8')
            ->withBody(new SwooleStream($format));
    }

    /** 向浏览器输出图片
     * @param string $image
     * @param string $type
     * @return ResponseInterface
     */
    public function responseImage(string $image, string $type = 'image/png'): ResponseInterface
    {
        return $this->handleHeader($this->getResponse())
            ->withAddedHeader('content-type', $type)
            ->withBody(new SwooleStream($image));
    }

    /**
     * @return ResponsePlusInterface
     */
    public function getResponse(): ResponsePlusInterface
    {
        return parent::getResponse(); // TODO: Change the autogenerated stub
    }

    private function handleHeader(ResponseInterface $response): ResponseInterface
    {
        return su_admin_http_header($response,'su_admin_http.Server');
    }
}
